Mac、Linux下打开Terminal，Windows下打开命令提示符（command prompt）
给你的repo创建一个全新的clone
git clone --bare https://github.com/user/repo.git
cd repo.git
复制粘贴脚本，并根据你的信息修改以下变量：旧的Email地址，正确的用户名，正确的邮件地址
#!/bin/sh
git filter-branch --env-filter '
OLD_EMAIL="email@example.com"
CORRECT_NAME="XLongGitHub"
CORRECT_EMAIL="1311620554@qq.com"
if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$CORRECT_NAME"
    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$CORRECT_NAME"
    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags
按 Enter键 执行脚本。
用git log命令看看新 Git 历史有没有错误
把正确历史 push 到 Github
git push --force --tags origin 'refs/heads/*'
删掉刚刚临时创建的 clone
cd ..
rm -rf repo.git
如何正确设置你的 git 个人信息
接下来全局设置好你的正确信息，以后就放心的用Github进行版本管理吧 ^_^

git config --global user.email "你的邮件地址"
git config --global user.name "你的Github用户名"